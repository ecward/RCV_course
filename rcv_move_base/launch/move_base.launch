<?xml version="1.0"?>
<launch>
    <!-- <arg name="map"/> -->

    <!-- lanch map server -->
    <!-- <node name="map_server" pkg="map_server" type="map_server" args="$(arg map)"/> -->

    <!-- launch AMCL -->
    <!--
    <include file="$(find rcv_move_base)/launch/amcl.launch">
        <arg name="machine" value="$(arg machine)"/>
        <arg name="user" value="$(arg user)"/>
    </include>
    -->

    <!-- Until we have a proper localization, just add a TF publisher that identifies map with odom -->
    <node pkg="tf" type="static_transform_publisher" name="map_broadcaster" args="0 0 0 0 0 0 base_link map 100"/>

    <node name="project_left_velodyne" pkg="rcv_move_base" type="project_velodyne" output="screen">
        <remap from="/input" to="/velodyne_points_left"/>
        <remap from="/output" to="/move_base/projected_left_velodyne"/>
        <param name="sensor_frame" value="velodyne_left"/>
    </node>
    <node name="project_right_velodyne" pkg="rcv_move_base" type="project_velodyne" output="screen">
        <remap from="/input" to="/velodyne_points_right"/>
        <remap from="/output" to="/move_base/projected_right_velodyne"/>
        <param name="sensor_frame" value="velodyne_right"/>
    </node>

    <!-- But when there is a chest_xtion, we first need to launch all the chest_xtion obstacle-avoiding
         stuff on the pc the chest_xtion is connected to, as well as our own move_base. -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen" clear_params="true">
        <!-- default:20.0. with this value dwa planner fails to find a valid plan a lot more -->
        <rosparam file="$(find rcv_move_base)/params/move_base_params.yaml" command="load"/>
        <rosparam file="$(find rcv_move_base)/params/costmap_params.yaml" command="load" ns="local_costmap"/>
        <rosparam file="$(find rcv_move_base)/params/dwa_planner_ros.yaml" command="load"/>
	    <rosparam file="$(find rcv_move_base)/params/nav_fn_ros.yaml" command="load" />
    </node>

</launch>
